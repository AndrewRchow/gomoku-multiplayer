{"version":3,"sources":["components/App/app.module.css","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Game/offlineGame.js","constants/routes.js","components/Home/index.js","components/Game/onlineGame.js","components/Multiplayer/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","rooms","db","ref","openRoom","room","id","gameState","app","initializeApp","this","auth","database","storage","Board","i","key","keyProp","value","squares","onClick","winSeq","boardSquares","boardSquaresRow","push","className","renderSquare","Square","index","isWinningSquare","includes","calculateWinner","winner","squaresArray","squaresRow","length","console","log","j","findFiveInARow","matrix","row","column","win","mLength","selected","sequence","player","newGame","Array","fill","xIsNext","lastClick","searchButton","setState","loading","once","then","snapshot","val","isOpen","roomId","update","playerO","playerOName","state","name","off","on","roomInfo","playerX","playerXName","completed","playerDisconnect","snap","newRoomId","window","addEventListener","cancelSearchButton","handleChange","event","target","error","history","pathname","override","css","type","onChange","style","display","disabled","sizeUnit","size","color","marginTop","Game","myName","opponentName","Object","keys","forEach","removeEventListener","myTurn","status","to","handleClick","isLastClickedSquare","Multiplayer","location","App","exact","path","component","Home","Boolean","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9fc4818.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fade-enter\":\"app_fade-enter__1W2Qu\",\"fade-enter-active\":\"app_fade-enter-active__1Xjiz\",\"fade-exit\":\"app_fade-exit__15hd8\",\"fade-exit-active\":\"app_fade-exit-active__3jgjR\",\"transition-group\":\"app_transition-group__19L6v\",\"route-section\":\"app_route-section__38Uae\"};","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.storage = app.storage();\r\n  }\r\n\r\n  \r\n  //Database\r\n  rooms = () => this.db.ref(`gomoku/rooms`);\r\n  openRoom = () => this.db.ref(`gomoku/openRoom`);\r\n\r\n  room = id => this.db.ref(`gomoku/rooms/${id}`);\r\n  gameState = id => this.db.ref(`gomoku/rooms/${id}/gameState`);\r\n\r\n\r\n\r\n\r\n  // *** User API ***\r\n  //Database\r\n  // user = userid => this.db.ref(`users/${userid}`);\r\n  // bobaShopUserReview = (shopName, userId) => this.db.ref(`bobaShopUserReviews/${shopName}/${userId}`);\r\n  // bobaShopUserComment = (shopName, userId) => this.db.ref(`bobaShopUserReviews/${shopName}/${userId}/comments`);\r\n  // userReview = (userId, shopName) => this.db.ref(`users/${userId}/reviews/${shopName}`);\r\n  // userReviewComment = (userId, shopName) => this.db.ref(`users/${userId}/reviews/${shopName}/comments`);  \r\n  // bobaShop = (bobaShop) => this.db.ref(`bobaShops/${bobaShop}`);\r\n  // location = (location) => this.db.ref(`locations/${location}`);\r\n  // userReviewLastVisit = (userid) => this.db.ref(`users/${userid}/reviewsLastVisit`);\r\n\r\n  // bobaShopReviews = () => this.db.ref(`bobaShopUserReviews`);\r\n  // bobaShopUserReviews = (shopName) => this.db.ref(`bobaShopUserReviews/${shopName}`);\r\n  // userReviews = (userId) => this.db.ref(`users/${userId}/reviews`);\r\n  // users = () => this.db.ref('users');\r\n  // bobaShops = () => this.db.ref('bobaShops');\r\n  // locations = () => this.db.ref('locations');\r\n  // reviewDateTimes = () => this.db.ref('reviewDateTimes');\r\n\r\n  // bobaShopImages = (shopName) => this.db.ref(`bobaShops/${shopName}/images`);\r\n  // bobaShopImage = (shopName, id) => this.db.ref(`bobaShops/${shopName}/images/${id}`);\r\n  // userImages = (userId) => this.db.ref(`users/${userId}/images`);\r\n  // userImage = (userId, id) => this.db.ref(`users/${userId}/images/${id}`);\r\n  // images = () => this.db.ref(`images`);\r\n  // image = (id) => this.db.ref(`images/${id}`);\r\n\r\n\r\n  // //Storage\r\n  // storageBobaShopImages = (bobaShop) => this.storage.ref(`bobaShops/${bobaShop}/images`);\r\n  // storageBobaShopImage = (bobaShop, imageName) => this.storage.ref(`bobaShops/${bobaShop}/images/${imageName}`);\r\n\r\n\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './offlineGame.css';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(225).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isDraw: false\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n      isDraw: history.length === 225 ? true : false\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      isDraw: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const isDraw = this.state.isDraw;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Move ' + move :\r\n        // 'Go to move #' + move :\r\n        'Restart';\r\n      // 'Go to game start';\r\n\r\n      if(move){\r\n        return (\r\n          <li key={move}>\r\n            <button className=\"btn btn-info\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        )\r\n      }else {\r\n        return (\r\n          <li key={move}>\r\n            <button className=\"btn btn-primary\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <li key={move}>\r\n        <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n      </li>\r\n      )\r\n\r\n    })\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.player;\r\n    } else if (isDraw) {\r\n      status = 'Draw';\r\n    }\r\n    else {\r\n      status = 'Next: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      // status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <h3 className=\"title\">Single</h3>\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winSeq={winner.sequence} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square\r\n      key={i} keyProp={i}\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      winSeq={this.props.winSeq} />;\r\n  }\r\n\r\n  render() {\r\n    var boardSquares = [];\r\n    var boardSquaresRow = [];\r\n    for (var i = 0; i < 225; i++) {\r\n      if (i % 15 == 0 && i != 0) {\r\n        boardSquares.push(<div className=\"board-row\" key={i}>{boardSquaresRow}</div>);\r\n        boardSquaresRow = [];\r\n      }\r\n      boardSquaresRow.push(this.renderSquare(i));\r\n\r\n      // if(i == 224){\r\n      //   boardSquares.push(<div className=\"board-row\" key={i}>{boardSquaresRow}</div>);\r\n      // }\r\n    }\r\n    return (\r\n      <div>\r\n        {boardSquares}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    let isWinningSquare = false;\r\n    if (this.props.winSeq) {\r\n      isWinningSquare = elementInArray(this.props.keyProp, this.props.winSeq);\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className={'square ' + (isWinningSquare ? 'winningSquare' : '')}\r\n        onClick={() => this.props.onClick()}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Game\r\n\r\n\r\n// ========================================\r\n\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  var squaresArray = [];\r\n  var squaresRow = [];\r\n  var winner;\r\n  for (var i = 0; i < squares.length; i++) {\r\n    if (i % 15 == 0 && i != 0) {\r\n      squaresArray.push(squaresRow);\r\n      squaresRow = [];\r\n    }\r\n    squaresRow.push(squares[i]);\r\n\r\n    // if(i == 224){\r\n    //   squaresArray.push(squaresRow);\r\n    // }\r\n  }\r\n  console.log(squaresArray);\r\n\r\n  for (var i = 0; i < squaresArray.length; i++) {\r\n    for (var j = 0; j < squaresArray[i].length; j++) {\r\n      if (squaresArray[i][j]) {\r\n        winner = findFiveInARow(squaresArray, i, j);\r\n        if (winner) {\r\n          console.log(winner);\r\n          return winner;\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction findFiveInARow(matrix, row, column) {\r\n  var mLength = matrix.length+1;\r\n  var selected = matrix[row][column];\r\n  var sequence = [];\r\n  var win;\r\n//Horizontal right\r\n  for (var i = 0; i < 5; i++) {\r\n    if (0>column-4 || selected != matrix[row][column-i]) {\r\n      sequence = [];\r\n      win = false;\r\n      break;\r\n    }\r\n    sequence.push((row*mLength) + (column-i));\r\n    win = true;\r\n  }\r\n//Vertical \r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > row-4 || selected != matrix[row-i][column]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row-i)*mLength) + (column));\r\n      win = true;\r\n    }\r\n  }\r\n//Diagonal Q13\r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > column-4 || matrix.length<row+4 || selected != matrix[row+i][column-i]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row+i)*mLength) + (column-i));\r\n      win = true;\r\n    }\r\n  }\r\n//Diagonal Q24\r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > column-4 || 0>row-4 || selected != matrix[row-i][column-i]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row-i)*mLength) + (column-i));\r\n      win = true;\r\n    }\r\n  }\r\n\r\n\r\n  if (win) {\r\n    return {\r\n      player: selected,\r\n      sequence: sequence\r\n          };\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction elementInArray(index, array) {\r\n  if (array.includes(index)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","\r\nexport const Home = '/';\r\nexport const Multiplayer = '/multiplayer';\r\n\r\nexport const DEVELOP = true;\r\n","import React from 'react';\r\nimport './home.css';\r\nimport { BrowserRouter as Router, Route, HashRouter } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { css } from '@emotion/core';\r\n\r\nimport OfflineGame from '../Game/offlineGame'\r\nimport * as Routes from '../../constants/routes';\r\n\r\nconst newGame = {\r\n    squares: Array(225).fill(''),\r\n    xIsNext: true,\r\n    lastClick: 226\r\n};\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            error: '',\r\n            roomId: '',\r\n            roomInfo: {},\r\n            player: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log([{\r\n            squares: Array(225).fill(null)\r\n        }]);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.roomInfo.playerO) {\r\n            this.props.history.push({\r\n                pathname: Routes.Multiplayer,\r\n                state: {\r\n                    roomId: this.state.roomId,\r\n                    player: this.state.player\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // window.removeEventListener('beforeunload', this.test);\r\n        this.props.firebase.room().off();\r\n    }\r\n\r\n    searchButton = () => {\r\n        this.setState({\r\n            loading: true\r\n        }, () => {\r\n\r\n            this.props.firebase\r\n                .openRoom()\r\n                .once('value').then((snapshot) => {\r\n                    if (snapshot.val()) {\r\n                        let isOpen = snapshot.val().isOpen;\r\n                        let roomId = snapshot.val().roomId;\r\n                        if (!isOpen) {\r\n                            this.props.firebase.rooms()\r\n                                .push({\r\n                                    gameState: newGame,\r\n                                    playerX: true,\r\n                                    playerO: false,\r\n                                    playerXName: this.state.name,\r\n                                    playerOName: '',\r\n                                    completed: false,\r\n                                    playerDisconnect: false\r\n                                })\r\n                                .then((snap) => {\r\n                                    const newRoomId = snap.key;\r\n                                    this.props.firebase.openRoom()\r\n                                        .update({\r\n                                            roomId: newRoomId,\r\n                                            isOpen: true\r\n                                        }).then(() => {\r\n                                            this.setState({\r\n                                                roomId: newRoomId,\r\n                                                player: 'playerX'\r\n                                            }, () => {\r\n                                                this.props.firebase.room().off();\r\n                                                this.props.firebase.room(newRoomId).on('value', snapshot => {\r\n                                                    this.setState({\r\n                                                        roomInfo: snapshot.val(),\r\n                                                    })\r\n                                                    window.addEventListener('beforeunload', this.playerDisconnect);\r\n                                                })\r\n                                            });\r\n                                        });\r\n                                })\r\n                        } else if (isOpen) {\r\n                            this.props.firebase.room(roomId)\r\n                                .update({\r\n                                    playerO: true,\r\n                                    playerOName: this.state.name,\r\n                                })\r\n                                .then(() => {\r\n                                    this.props.firebase.openRoom()\r\n                                        .update({\r\n                                            isOpen: false\r\n                                        }).then(() => {\r\n                                            this.setState({\r\n                                                roomId: roomId,\r\n                                                player: 'playerO'\r\n                                            }, () => {\r\n                                                this.props.firebase.room().off();\r\n                                                this.props.firebase.room(roomId).on('value', snapshot => {\r\n                                                    this.setState({\r\n                                                        roomInfo: snapshot.val(),\r\n                                                    })\r\n                                                })\r\n                                            });\r\n                                        });\r\n                                });\r\n                        }\r\n\r\n                        // this.props.firebase.room(roomId).on('value', snapshot => {\r\n                        //   console.log(snapshot.val());\r\n                        //   if (napshot.val()) {\r\n                        //     const roomInfo = Object.keys(snapshot.val()).map(key => ({\r\n                        //       bobaShop: key,\r\n                        //       userid,\r\n                        //       ...myReviewsObject[key],\r\n                        //     }))\r\n                        //     this.sortReviews(myReviewsList)\r\n                        //   } else {\r\n                        //     this.setState({ reviews: [], loading: false });\r\n                        //   }\r\n                        // });\r\n                    }\r\n                })\r\n\r\n\r\n\r\n        })\r\n    }\r\n\r\n    cancelSearchButton = () => {\r\n        if (this.state.player == 'playerX') {\r\n            this.playerDisconnect();\r\n        }\r\n        this.props.firebase.room().off();\r\n        this.setState({\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    playerDisconnect = () => {\r\n        this.props.firebase.openRoom()\r\n            .update({\r\n                isOpen: false\r\n            })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { loading, name, roomInfo, roomId } = this.state;\r\n\r\n        const override = css`\r\n            marginRight: 30px`;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"well\">\r\n                    <h5>Online Search</h5>\r\n                    <label>\r\n                        User name:\r\n                      <input type=\"text\" value={name} name=\"name\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <div style={{display:'block'}}>\r\n                        <button\r\n                            className={'btn btn-info'} style={{ display: 'inline' }}\r\n                            onClick={this.searchButton} disabled={loading || !name}>Search for room</button>\r\n                        <div className='sweet-loading' style={{ display: 'inline' }}>\r\n                            <ClipLoader\r\n                                sizeUnit={\"px\"}\r\n                                css={override}\r\n                                size={30}\r\n                                color={'#61aceb'}\r\n                                loading={loading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {loading\r\n                        ? <button style={{marginTop:\"10px\"}} onClick={this.cancelSearchButton}>Cancel</button>\r\n                        : <div></div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                {/* <OfflineGame /> */}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withFirebase(Home);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './onlineGame.css';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport { withFirebase } from '../Firebase';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { css } from '@emotion/core';\r\nimport * as Routes from '../../constants/routes';\r\nimport { Link } from 'react-router-dom';\r\n// import classes from './onlineGame.module.css';\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      squares: Array(225).fill(''),\r\n      xIsNext: true,\r\n      lastClick: '',\r\n      roomId: this.props.roomId,\r\n      player: this.props.player,\r\n      playerDisconnect: false,\r\n      myName: '',\r\n      opponentName: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('beforeunload', this.playerDisconnect);\r\n\r\n    this.props.firebase.room(this.state.roomId).on('value', snapshot => {\r\n      let squares = [];\r\n      Object.keys(snapshot.val().gameState.squares).forEach((key) => {\r\n        squares.push(snapshot.val().gameState.squares[key]);\r\n      });\r\n\r\n      this.setState({\r\n        squares,\r\n        xIsNext: snapshot.val().gameState.xIsNext,\r\n        lastClick: snapshot.val().gameState.lastClick,\r\n        playerDisconnect: snapshot.val().playerDisconnect,\r\n        myName: this.state.player == 'playerX' ? snapshot.val().playerXName : snapshot.val().playerOName,\r\n        opponentName: this.state.player == 'playerX' ? snapshot.val().playerOName : snapshot.val().playerXName\r\n      })\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.playerDisconnect);\r\n\r\n    this.props.firebase.room().off();\r\n  }\r\n\r\n  playerDisconnect = () => {\r\n    this.props.firebase.room(this.state.roomId)\r\n      .update({\r\n        playerDisconnect: true\r\n      });\r\n\r\n    this.props.firebase.openRoom()\r\n      .update({\r\n        isOpen: false\r\n      });\r\n  }\r\n  handleClick(i, myTurn) {\r\n    if (!myTurn)\r\n      return;\r\n\r\n    const squares = this.state.squares;\r\n\r\n    if (calculateWinner(squares) || squares[i])\r\n      return;\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    this.props.firebase.gameState(this.state.roomId)\r\n      .update({\r\n        squares: squares,\r\n        xIsNext: !this.state.xIsNext,\r\n        lastClick: i\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { squares, xIsNext, lastClick, player, playerDisconnect, myName, opponentName } = this.state;\r\n    const winner = calculateWinner(squares);\r\n\r\n    const override = css`\r\n    display: inline-block;`;\r\n\r\n    let status = '';\r\n    let myTurn = false;\r\n    if (xIsNext && player == 'playerX') {\r\n      myTurn = true;\r\n      status = 'Your turn (X)';\r\n    } else if (!xIsNext && player == 'playerO') {\r\n      myTurn = true;\r\n      status = 'Your turn (O)';\r\n    } else if (xIsNext && player == 'playerO') {\r\n      myTurn = false;\r\n      status = 'Other turn (X)';\r\n    } else if (!xIsNext && player == 'playerX') {\r\n      myTurn = false;\r\n      status = 'Other turn (O)';\r\n    }\r\n\r\n    if (winner && !myTurn) {\r\n      status = 'You Win';\r\n    } else if (winner && myTurn) {\r\n      status = 'You Lose';\r\n    }\r\n\r\n    if (playerDisconnect) {\r\n      status = 'Opponent disconnected'\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <h3 className=\"title\">Title</h3>\r\n          <div className={myTurn ? \"currentTurnBorder\" : \"\"}>{myName}</div>\r\n          <div className={!myTurn ? \"currentTurnBorder\" : \"\"}>{opponentName}</div>\r\n\r\n          {!winner\r\n            ?\r\n            <div className={(myTurn ? 'myTurn' : 'opponentTurn')}>\r\n              {status}\r\n              <div className='sweet-loading'>\r\n                <ClipLoader\r\n                  sizeUnit={\"px\"}\r\n                  css={override}\r\n                  size={30}\r\n                  color={'#61aceb'}\r\n                  loading={!myTurn}\r\n                />\r\n              </div>\r\n            </div>\r\n            :\r\n            <div className={(!myTurn ? 'winner' : 'loser')}>\r\n              {status}\r\n            </div>\r\n          }\r\n          {playerDisconnect || winner\r\n            ? <div>\r\n              <button className=\"btn btn-info returnButton\">\r\n                <Link to={Routes.Home}>Return</Link>\r\n              </button>\r\n            </div>\r\n            : <div></div>\r\n          }\r\n\r\n          <Board\r\n            squares={squares}\r\n            lastClick={lastClick}\r\n            myTurn={myTurn}\r\n            onClick={(i) => this.handleClick(i, myTurn)}\r\n            winSeq={winner.sequence} />\r\n        </div>\r\n        {/* <div className=\"game-info\">\r\n          <div>{status}</div>\r\n        </div> */}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square\r\n      key={i} keyProp={i}\r\n      lastClick={this.props.lastClick}\r\n      myTurn={this.props.myTurn}\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      winSeq={this.props.winSeq} />;\r\n  }\r\n\r\n  render() {\r\n    var boardSquares = [];\r\n    var boardSquaresRow = [];\r\n    for (var i = 0; i < 225; i++) {\r\n      if (i % 15 == 0 && i != 0) {\r\n        boardSquares.push(<div className=\"board-row\" key={i}>{boardSquaresRow}</div>);\r\n        boardSquaresRow = [];\r\n      }\r\n      boardSquaresRow.push(this.renderSquare(i));\r\n    }\r\n    return (\r\n      <div>\r\n        {boardSquares}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    let isWinningSquare = false;\r\n    let isLastClickedSquare = false;\r\n    if (this.props.winSeq) {\r\n      isWinningSquare = elementInArray(this.props.keyProp, this.props.winSeq);\r\n    }\r\n    if (this.props.lastClick == this.props.keyProp) {\r\n      isLastClickedSquare = true;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className={(this.props.myTurn ? 'square ' : 'disabledSquare ') + (isWinningSquare ? 'winningSquare ' : '') + (isLastClickedSquare ? 'lastClick' : '')}\r\n        onClick={() => this.props.onClick()}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withFirebase(Game)\r\n\r\n\r\n\r\n// ========================================\r\n\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  var squaresArray = [];\r\n  var squaresRow = [];\r\n  var winner;\r\n  for (var i = 0; i < squares.length; i++) {\r\n    if (i % 15 == 0 && i != 0) {\r\n      squaresArray.push(squaresRow);\r\n      squaresRow = [];\r\n    }\r\n    squaresRow.push(squares[i]);\r\n  }\r\n\r\n  for (var i = 0; i < squaresArray.length; i++) {\r\n    for (var j = 0; j < squaresArray[i].length; j++) {\r\n      if (squaresArray[i][j]) {\r\n        winner = findFiveInARow(squaresArray, i, j);\r\n        if (winner) {\r\n          return winner;\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction findFiveInARow(matrix, row, column) {\r\n  var mLength = matrix.length + 1;\r\n  var selected = matrix[row][column];\r\n  var sequence = [];\r\n  var win;\r\n  //Horizontal right\r\n  for (var i = 0; i < 5; i++) {\r\n    if (0 > column - 4 || selected != matrix[row][column - i]) {\r\n      sequence = [];\r\n      win = false;\r\n      break;\r\n    }\r\n    sequence.push((row * mLength) + (column - i));\r\n    win = true;\r\n  }\r\n  //Vertical \r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > row - 4 || selected != matrix[row - i][column]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row - i) * mLength) + (column));\r\n      win = true;\r\n    }\r\n  }\r\n  //Diagonal Q13\r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > column - 4 || matrix.length < row + 4 || selected != matrix[row + i][column - i]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row + i) * mLength) + (column - i));\r\n      win = true;\r\n    }\r\n  }\r\n  //Diagonal Q24\r\n  if (!win) {\r\n    for (var i = 0; i < 5; i++) {\r\n      if (0 > column - 4 || 0 > row - 4 || selected != matrix[row - i][column - i]) {\r\n        sequence = [];\r\n        win = false;\r\n        break;\r\n      }\r\n      sequence.push(((row - i) * mLength) + (column - i));\r\n      win = true;\r\n    }\r\n  }\r\n\r\n\r\n  if (win) {\r\n    return {\r\n      player: selected,\r\n      sequence: sequence\r\n    };\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction elementInArray(index, array) {\r\n  if (array.includes(index)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport OnlineGame from '../Game/onlineGame';\r\n\r\nclass Multiplayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            roomId: this.props.location.state.roomId,\r\n            player: this.props.location.state.player\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { roomId, player } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <h5>Multi</h5>\r\n                {roomId\r\n                    ? <OnlineGame roomId={roomId} player={player}/>\r\n                    : <div></div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Multiplayer;","import React from 'react';\n\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport './app.module.css';\nimport { ClipLoader } from 'react-spinners';\nimport { css } from '@emotion/core';\n\nimport Game from '../Game/offlineGame'\nimport * as Routes from '../../constants/routes';\nimport Home from '../Home';\nimport Multiplayer from '../Multiplayer';\nimport { Transition, TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path={Routes.Home} component={Home} />\n          <Route exact path={Routes.Multiplayer} component={Multiplayer} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\n\n// class App extends React.Component {\n\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div className=\"app\">\n//           <Route render={({ location }) => {\n//             const { key } = location;\n\n//             return (\n//               <TransitionGroup component={null}>\n//                 <Transition\n//                   key={key}\n//                   // onEnter={(node, appears) => play(pathname, node, appears)}\n//                   // onExit={(node, appears) => exit(node, appears)}\n//                   timeout={{ enter: 300, exit: 300 }}\n//                 >\n//                   <Switch location={location}>\n//                     <Route exact path={Routes.Home} component={Home} />\n//                     <Route exact path={Routes.Multiplayer} component={Multiplayer} />\n//                   </Switch>\n//                 </Transition>\n//               </TransitionGroup>\n//             )\n//           }} />\n//         </div>\n//       </BrowserRouter>\n//     )\n//   }\n// }\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}